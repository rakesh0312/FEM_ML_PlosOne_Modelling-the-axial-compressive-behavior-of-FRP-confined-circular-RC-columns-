import pandas as pd
import numpy as np
from numpy import absolute
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import RepeatedKFold
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from matplotlib import pyplot as plt
from sklearn.ensemble import ExtraTreesRegressor
import pickle
df = pd.read_excel('F:\Project\matlab\ml fifth fem out 2.xlsx',header = [0])
df.head()
data = df.values
X = data[:,:7]
y = data[:,-1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=123)
modelo2 = ExtraTreesRegressor(n_jobs=-1,n_estimators = 135,min_samples_split = 2,max_features=6,min_samples_leaf=1,max_depth=24)
modelo2.fit(X_train,y_train)
cv = RepeatedKFold(n_splits=10,n_repeats=3, random_state=123)
scores = cross_val_score(modelo2, X, y, scoring='neg_mean_absolute_error', cv=cv, n_jobs=-1)
y_train_pred = modelo2.predict(X_train)
rmse_train = np.sqrt(mean_squared_error(y_train, y_train_pred))
print("RMSE: %f" % (rmse_train))
y_test_pred = modelo2.predict(X_test)
rmse_test = np.sqrt(mean_squared_error(y_test, y_test_pred))
print("RMSE: %f" % (rmse_test))
print("R square on training data --> ", r2_score(y_train,y_train_pred))
print("R square on testing data --> ", r2_score(y_test,y_test_pred))
with open("etro2_femplos.pkl", "wb") as file:
    pickle.dump(modelo2, file)  
